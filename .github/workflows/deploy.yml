name: Deploy the app

on:
  push:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-18.04

    steps:
      # Configure environment
      - name: Configure PHP version
        run: sudo update-alternatives --set php /usr/bin/php7.3
      - name: Configure NodeJS version
        run: \. ~/.nvm/nvm.sh && nvm install 12

      # Clone the project
      - uses: actions/checkout@v2

      # Cache Composer dependencies
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      # Cache Yarn dependencies
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      # Install Composer dependencies
      - name: Install PHP dependencies
        run: composer install --no-dev --no-scripts --optimize-autoloader

      # Install Yarn dependencies (with dev deps)
      - name: Install Yarn dependencies
        run: yarn install --frozen-lockfile

      # Build assets
      - name: Build assets with Webpack
        run: yarn build

      # Remove dev dependencies
      - name: Remove Yarn dev deps
        run: |
          rm -rf ./node_modules
          yarn install --production --frozen-lockfile

      # Configure environment variables
      - name: Configure .env.local
        run: |
          cp ./.env ./.env.local
          sudo sed -i'.tmp' -e 's/APP_ENV=dev/APP_ENV=prod/g' ./.env.local
          sudo sed -i'.tmp' -e 's,DATABASE_URL=mysql://db_user:db_password@127.0.0.1:3306/db_name,DATABASE_URL='"${{ secrets.DATABASE_URI }}"',g' ./.env.local
          sudo rm ./.env.local.tmp

      # Set permissions
      - name: Set permissions
        run: |
          find ./ -type f -exec chmod 664 {} \;
          find ./ -type d -exec chmod 775 {} \;

      # Configure passwordless SSH authentication
      - name: Configure SSH
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tee ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      # Deploy the app to the production machine
      - name: Deploy with rsync
        run: rsync -av -e "ssh -vvv -i ~/.ssh/id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/
